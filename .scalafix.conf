rules = [
  Disable
  DisableSyntax
  ExplicitResultTypes
  LeakingImplicitClassVal
  # https://github.com/scalacenter/scalafix/issues/603
  #  MissingFinal
  #  NoInfer
  RemoveUnusedImports
  RemoveUnusedTerms
]

Disable.symbols = [
  # waiting for https://github.com/scalacenter/scalafix/issues/559
  #"scala.Any.asInstanceOf"
  #"scala.Any.isInstanceOf"
  "scala.util.Either.LeftProjection.get"
  "scala.util.Either.RightProjection.get"
  "scala.util.Try.get"
  "java.lang.Object.equals"
  "java.lang.Object.eq"
  "java.lang.Object.ne"
  "scala.Enumeration"
  "scala.collection.mutable"

  # bad code needs cleaned up
  "scala.Option.get"
  "java.lang.Object.toString"
  #"java.lang.Object#`==`"
]

DisableSyntax.keywords = [
  #  var
  #  null
  return
  #  throw
  #  while
]
DisableSyntax.noSemicolons = true
DisableSyntax.noXml = true
DisableSyntax.noCovariantTypes = true
DisableSyntax.noContravariantTypes = true
DisableSyntax.noValInAbstract = true
DisableSyntax.noImplicitObject = true
DisableSyntax.noImplicitConversion = true
DisableSyntax.noFinalVal = true

# DisableSyntax.regex = [
#   {
#     id = "redundant"
#     pattern = "Type"
#     message = "That's a really bad name."
#   }
# ]

ExplicitResultTypes {
  unsafeShortenNames = true
}

NoInfer.symbols = [
  "scala.Predef.any2stringadd"
  "scala.Any"
  "scala.AnyVal"
  "scala.Product"

  "scala.Option.option2Iterable"

  # false positives?
  # "scala.Serializable"
  # "java.io.Serializable"
]
